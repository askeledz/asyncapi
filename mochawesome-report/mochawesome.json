{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-27T11:19:36.507Z",
    "end": "2023-06-27T11:19:36.950Z",
    "duration": 443,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "69893744-3925-472d-9f22-2a9ba6a8373e",
      "title": "",
      "fullFile": "/Users/askeledzija/workspace/asyncapi/test/test.spec.js",
      "file": "/test/test.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f37d30cb-b309-4065-9835-8a6dfce5c54f",
          "title": "Async demo",
          "fullFile": "/Users/askeledzija/workspace/asyncapi/test/test.spec.js",
          "file": "/test/test.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should successfully create a post using POST request",
              "fullTitle": "Async demo Should successfully create a post using POST request",
              "timedOut": false,
              "duration": 324,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request(baseURL)\n    .post('/posts')\n    .send(data)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", 'application/json')\n    .then((res, err) => {\n        expect(res.statusCode).to.be.equal(201)\n        //postId = res.body.id\n        console.log(postId)\n        if (err) {\n            throw err;\n        }\n    });",
              "err": {},
              "uuid": "aebdeadf-dbd6-4af2-b2db-7627b78d723a",
              "parentUUID": "f37d30cb-b309-4065-9835-8a6dfce5c54f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should Fetch the posts by id using GET request",
              "fullTitle": "Async demo Should Fetch the posts by id using GET request",
              "timedOut": false,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await request(baseURL)\n    .get('/posts/' + postId)\n    .set(\"Accept\", \"application/json\")\n    .set(\"Content-Type\", 'application/json')\n    .then((res, err) => {\n        expect(res.statusCode).to.be.equal(200)\n        expect(res.body.title).to.contains('reprehenderit')\n        if (err) {\n            throw err;\n        }\n    });",
              "err": {},
              "uuid": "ed76dc19-54e2-4fdf-90de-541531e31c95",
              "parentUUID": "f37d30cb-b309-4065-9835-8a6dfce5c54f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aebdeadf-dbd6-4af2-b2db-7627b78d723a",
            "ed76dc19-54e2-4fdf-90de-541531e31c95"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 437,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}